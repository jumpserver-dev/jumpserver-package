on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Create tag'
        required: true
        default: 'v1.0.0'
      url:
        description: 'Build repository'
        required: true
        default: 'https://github.com/jumpserver/jumpserver/raw/refs/heads/dev/pyproject.toml'

name: Build Wheels

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Tag
        run: |
          git config --global user.name "actions-user[bot]"
          git config --global user.email "actions-user[bot]@users.noreply.github.com"
          git tag -a ${{ github.event.inputs.tag }} -m "Release Version ${{ github.event.inputs.tag }}" || echo "Tag already exists"
          git push origin ${{ github.event.inputs.tag }} || echo "Tag already exists"

      - name: Create Release
        run: |
          gh release create ${{ github.event.inputs.tag }} --notes "Release ${{ github.event.inputs.tag }}" --latest=false || echo "Release already exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ '3.11' ]
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Get pyproject.toml
        run: |
          wget ${{ github.event.inputs.url }}
          mkdir -p wheelhouse

      - name: Build wheels
        run: |
          grep -oP '^[a-zA-Z0-9_-]+ = \{ url = "https?://[^"]+.zip"' pyproject.toml | awk -F' = ' '{print $1 ": "$3}' | while IFS=: read -r package url; do
            echo "Building ${package}"
            url=$(echo "$url" | tr -d '"')
            pip wheel --no-deps --wheel-dir wheelhouse ${url}
          done

      - name: Upload wheels
        run: |
          gh release upload ${{ github.event.inputs.tag }} wheelhouse/*.whl -R ${{ github.repository }} --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}